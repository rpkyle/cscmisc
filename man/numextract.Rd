% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/numextract.R
\name{numextract}
\alias{numextract}
\title{Extract Numeric Values from Character Strings}
\usage{
numextract(string, sequence = "first")
}
\arguments{
\item{string}{A single string of \code{class} string to parse for digits.}

\item{sequence}{A second character string, matching one of the following: \code{"first"}, \code{"last"}, \code{"collapse"}, or \code{"midpoint"}.}
}
\value{
Numeric value(s) occurring in \code{string}, or the midpoint of the first and last digits
        within the string.
}
\description{
Given a character string, this function will attempt to extract digits and return the result as
a numeric value.
}
\details{
All functions used are available in base R; no additional packages are required.
         If one matching sequence is identified, but the \code{sequence} argument is \code{"midpoint"}
         or \code{"collapse"}, the function attempts to return a "safe" value. In this case, the only
         numeric match is returned. If no matches are found, the function returns \code{numeric()}.
}
\examples{
example_string1 <- "12-15 HOURS"
example_string2 <- "DAY -1"

# Returns 12.
numextract(example_string1)
numextract(example_string1, sequence="first")

# Returns -15, a negative numeric value.
numextract(example_string1, sequence="last")

# Returns 1215, compressing two sequences into one.
numextract(example_string1, sequence="collapse")

# Returns 13.5, which is the midpoint of 15 and 12
(assumes second sequence does not correspond to negative numeric value).
numextract(example_string1, sequence="midpoint")

# All return -1
numextract(example_string2)
numextract(example_string2, sequence="first")
numextract(example_string2, sequence="last")
numextract(example_string2, sequence="midpoint")
numextract(example_string2, sequence="collapse")

}
\author{
Ryan Kyle, \email{ryan.kyle@mail.mcgill.ca}
}
\keyword{utilities}
